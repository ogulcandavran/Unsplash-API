{"version":3,"sources":["Components/SearchBar.js","Components/ImageGrid.js","Components/ImageList.js","Components/App.js","index.js"],"names":["SearchBar","state","term","myRef","React","createRef","onFormSubmit","event","preventDefault","props","focusAnime","anime","timeline","easing","duration","add","targets","current","borderLeftColor","borderTopColor","borderRightColor","borderBottomColor","delay","borderBottomWidth","blurAnime","className","onSubmit","this","onFocus","onBlur","ref","placeholder","onChange","setState","target","value","toUpperCase","Component","ImageGrid","adjustSpan","height","imageRef","clientHeight","span","Math","ceil","addEventListener","image","alt_description","urls","style","gridRowEnd","href","regular","rel","alt","src","ImageList","responseControl","images","calledImages","map","img","key","id","App","handleApiCall","a","axios","get","params","query","headers","Authorization","response","data","results","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4f8c5ed0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport anime from \"animejs\";\r\nimport { delay } from \"q\";\r\n\r\nclass SearchBar extends React.Component {\r\n  state = { term: \"\" };\r\n  myRef = React.createRef();\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.onFormSubmit(this.state.term);\r\n  };\r\n\r\n  focusAnime = () => {\r\n    const tl = anime.timeline({\r\n      easing: \"easeInQuad\",\r\n      duration: 200\r\n    });\r\n    tl.add({\r\n      targets: this.myRef.current,\r\n      borderLeftColor: \"#4267b2\"\r\n    })\r\n      .add({\r\n        targets: this.myRef.current,\r\n        borderTopColor: \"#4267b2\"\r\n      })\r\n      .add({\r\n        targets: this.myRef.current,\r\n        borderRightColor: \"#4267b2\"\r\n      })\r\n      .add({\r\n        targets: this.myRef.current,\r\n        borderBottomColor: \"#4267b2\"\r\n      })\r\n      .add({\r\n        targets: this.myRef.current,\r\n        borderLeftColor: \"#ffffff\"\r\n      })\r\n      .add({\r\n        targets: this.myRef.current,\r\n        borderTopColor: \"#ffffff\"\r\n      })\r\n      .add({\r\n        targets: this.myRef.current,\r\n        borderRightColor: \"#ffffff\"\r\n      })\r\n      .add({\r\n        targets: this.myRef.current,\r\n        delay: 200,\r\n        duration: 300,\r\n        borderBottomWidth: 2\r\n      })\r\n      .add({\r\n        targets: this.myRef.current,\r\n        duration: 1000,\r\n        borderBottomColor: \"#000000\"\r\n      });\r\n  };\r\n\r\n  blurAnime = () => {\r\n    const tl = anime.timeline({\r\n      easing: \"easeInQuad\",\r\n      duration: 200\r\n    });\r\n    tl.add({\r\n      targets: this.myRef.current,\r\n      borderRightColor: \"#000000\"\r\n    })\r\n      .add({\r\n        targets: this.myRef.current,\r\n        borderTopColor: \"#000000\"\r\n      })\r\n      .add({\r\n        targets: this.myRef.current,\r\n        borderLeftColor: \"#000000\"\r\n      })\r\n      .add({\r\n        targets: this.myRef.current,\r\n        delay: 100,\r\n        borderBottomWidth: 1\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"searchBar\">\r\n        <form onSubmit={this.onFormSubmit}>\r\n          <input\r\n            onFocus={this.focusAnime}\r\n            onBlur={this.blurAnime}\r\n            ref={this.myRef}\r\n            placeholder=\"Search for images...\"\r\n            onChange={event =>\r\n              this.setState({ term: event.target.value.toUpperCase() })\r\n            }\r\n            value={this.state.term}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nclass ImageGrid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { span: 0 };\r\n\r\n    this.imageRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener(\"load\", this.adjustSpan);\r\n  }\r\n\r\n  adjustSpan = () => {\r\n    const height = this.imageRef.current.clientHeight;\r\n    const span = Math.ceil(height / 5);\r\n    this.setState({ span });\r\n  };\r\n\r\n  render() {\r\n    const { alt_description, urls } = this.props.image;\r\n    return (\r\n      <div style={{ gridRowEnd: `span ${this.state.span}` }}>\r\n        <a href={urls.regular} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <img ref={this.imageRef} alt={alt_description} src={urls.regular} />\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGrid;\r\n","import React from \"react\";\r\nimport ImageGrid from \"./ImageGrid\";\r\n\r\nclass ImageList extends React.Component {\r\n  render() {\r\n    if (this.props.responseControl) {\r\n      return <div className=\"err\">No images found! Please enter a valid search term.</div>;\r\n    }\r\n    const images = this.props.calledImages.map(img => {\r\n      return <ImageGrid key={img.id} image={img} />;\r\n    });\r\n\r\n    return <div className=\"image-list\">{images}</div>;\r\n  }\r\n}\r\n\r\nexport default ImageList;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport ImageList from \"./ImageList\";\r\n\r\nclass App extends React.Component {\r\n  state = { images: [], responseControl: false };\r\n\r\n  handleApiCall = async term => {\r\n    const response = await axios.get(\"https://api.unsplash.com/search/photos\", {\r\n      params: { query: term },\r\n      headers: {\r\n        Authorization:\r\n          \"Client-ID b665cc7c1da0189cfb02ee21ee2516ad6cc30d242e03d4c48221240eb5e3a756\"\r\n      }\r\n    });\r\n    if (response.data.results.length === 0) {\r\n      this.setState({ responseControl: true });\r\n    } else {\r\n      this.setState({ images: response.data.results, responseControl: false });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchBar onFormSubmit={this.handleApiCall} />\r\n        <ImageList\r\n          calledImages={this.state.images}\r\n          responseControl={this.state.responseControl}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./Components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}